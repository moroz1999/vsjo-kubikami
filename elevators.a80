                        module  elevators
state_stop                  equ 0
state_up                    equ 1
state_down                  equ 2
state_none                  equ 3

item_not_elevator           equ 0
item_on_elevator            equ 1

end_marker                  equ #ff
                        struct  elevator
room_x                      byte
room_y                      byte
x                           byte
y                           byte
room_pos_x                  byte
room_pos_y                  byte
width                       byte
leg_left                    byte
cur_height                  byte
end_height                  byte
state                       byte
delay                       byte
timer                       byte
                        ends
room_item_elevator_check
                ; input:
                ; d - item x
                ; e - item y
                ;
                ; output: 
                ; a - item on elevator or not
                ; ix - elevator data address

                            ld  hl,rooms.room_elevators_buf
                            call    item_elevator_check
                            ret
item_elevator_check
hero_update_next
                            ld  a,(hl)
                ; check if there are no elevators
                            cp  rooms.elev_end_marker
                            ret z
                ; read elevator address to ix
                            ld  ixl,a
                            inc hl

                            ld  a,(hl)
                            ld  ixh,a
                            inc hl
                            push    hl
                ; ix now has elevator data start


                ; check item X from d

                            ld  a,(ix+elevator.room_pos_x)
                            ld  b,a
                ; b has left edge of elevator

                ; check that hero is left to elevator
                            ld  a,d
                            sub b
                            jr  c,hero_update_skip ;hero is left to elevator

                            ld  a,(ix+elevator.width)
                            add b
                ; c has right edge of elevator
                            ld  c,a

                ; check that hero is right to elevator
                            ld  a,d
                            sub c
                            jr  nc,hero_update_skip ;hero is right to elevator

                ; now check item Y from e

                            ld  a,(ix+elevator.cur_height)
                            ld  b,a
                ; b has current height of elevator

                            ld  a,(ix+elevator.room_pos_y)
                            sub b
                            ld  c,a
                ; c has top position of elevator
                            dec a

                ; check that hero is on the elevator                
                            sub e
                            jr  nz,hero_update_skip ;hero is not above elevator

                ; restore stack
                            pop hl
                ; return true
                            ld  a,item_on_elevator
                            ret
hero_update_skip
                            pop hl
                            jr  hero_update_next
                ; return false                    
                            ld  a,item_not_elevator
                            ret

amount                      equ (elevators_table_end-elevators_table)/2
elevators_table
                            dw  elevator_2_1
                            dw  elevator_3_1
                            ; dw  elevator_4_1_1
                            ; dw  elevator_4_1_2
                            ; dw  elevator_4_1_3
                            ; dw  elevator_4_3
elevators_table_end
elevator_2_1
                            elevator    {
                            2,
                            1,
                            0,
                            0,
                            8,
                            22,
                            12,
                            6,
                            2
                            2,
                            state_stop,
                            2,
                            0
                            }
elevator_3_1
                            elevator    {
                            3,
                            1,
                            0,
                            0,
                            4,
                            20,
                            8,
                            4,
                            2
                            35,
                            state_up,
                            2,
                            0
                            }
elevator_4_1_1
                            elevator    {
                            4,
                            1,
                            0,
                            0,
                            2,
                            20,
                            7,
                            3,
                            0
                            13,
                            state_up,
                            2,
                            0
                            }
elevator_4_1_2
                            elevator    {
                            4,
                            1,
                            0,
                            0,
                            9,
                            20,
                            8,
                            3,
                            0
                            13,
                            state_up,
                            2,
                            0
                            }
elevator_4_1_3
                            elevator    {
                            4,
                            1,
                            0,
                            0,
                            22,
                            20,
                            7,
                            3,
                            13
                            13,
                            state_up,
                            1,
                            0
                            }
elevator_4_3
                            elevator    {
                            4,
                            3,
                            0,
                            0,
                            6,
                            21,
                            12,
                            5,
                            13
                            13,
                            state_down,
                            3,
                            0
                            }
                        endmodule
                            include "elevators_restore.a80"
                            include "elevators_update.a80"
                            include "elevators_draw.a80"
                            include "elevators_coords.a80"
