                        module	items
items_end_marker            equ	255
item_not_in_room            equ	255
crowbar                     equ	0
toolkit                     equ	1
stone                       equ	2
item_size                   equ	item
item_color                  db	%01100000,%01000110
print_item_name
        ;   input
        ;   a - item type id
                            call	get_item_address
                            ld	de,item.name
                            add	hl,de

                            ld	e,(hl)
                            inc	hl
                            ld	d,(hl)
                            ex	hl,de
                            call	game_ui.print_item_name
                            ret
call_item_logic
        ;   input
        ;   a - item type id
        ;   output
        ;   a - contains 0 if logic is ignored
                            call	get_item_address
                            ld	de,item.logic
                            add	hl,de

                            ld	e,(hl)
                            inc	hl
                            ld	d,(hl)
                            ld	(call_item_call),de
call_item_call              equ	$+1
                            call	logic.empty_item_action
                            ret
get_item_address
        ; input 
        ; a - item type id
        ; output
        ; hl - item address
                            ld	hl,all_items
                            ld	de,item_size
                            ld	b,a
get_item_address_next
                            ld	a,(hl)
                            cp	b
                            ret	z
                            add	hl,de
                            jr	get_item_address_next
remove_item
        ; marks required item property as not currently located in room
        ; input
        ; a - item type id
                            call	get_item_address
                            ld	de,item.room_x
                            add	hl,de
                            ld	a,item_not_in_room
                            ld	(hl),a
                            ret
                        struct	item
type_id                     byte            ; type id
room_x                      byte            ; room number x
room_y                      byte            ; room number y
room_pos_x                  byte            ; position x
room_pos_y                  byte            ; position y
name                        word            ; address of name string
logic                       word            ; address of logic procedure
color1                      byte            ; gigacolor 1
color2                      byte            ; gigacolor 2
                        ends
all_items                        
item_0
                            item	{
                            crowbar                 // type_id
                            2                       // room_x
                            0                       // room_y
                            5                       // room_pos_x
                            14                      // room_pos_y
                            strings.crowbar         // name
                            logic.crowbar.action    // logic
                            %00000111               // color1
                            %01010000               // color2
                            }
item_1
                            item	{
                            toolkit                 // type_id
                            0                       // room_x
                            2                       // room_y
                            28                      // room_pos_x
                            20                      // room_pos_y
                            strings.toolkit         // name
                            logic.toolkit.action    // logic
                            %01000010               // color1
                            %00000111               // color2
                            }
item_2
                            item	{
                            stone                   // type_id
                            2                       // room_x
                            1                       // room_y
                            30                      // room_pos_x
                            3                       // room_pos_y
                            strings.stone           // name
                            logic.stone.action      // logic
                            %01000110               // color1
                            %00010000               // color2
                            }
items_end
                            db	items_end_marker
                        endmodule