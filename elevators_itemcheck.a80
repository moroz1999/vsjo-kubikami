                        module	elevators_itemcheck

check
                ; input:
                ; d - item x
                ; e - item's global y
                ;
                ; output: 
                ; a - item on elevator or not
                ; ix - elevator data address

                            ld	hl,rooms.room_elevators_buf
item_update_next
                            ld	a,(hl)
                ; check if there are no elevators
                            cp	rooms.elev_end_marker
                            ret	z
                ; read elevator address to ix
                            ld	ixl,a
                            inc	hl

                            ld	a,(hl)
                            ld	ixh,a
                            inc	hl
                            push	hl
                ; ix now has elevator data start

                ; check item X from d
                            ld	a,(ix+elevators.elevator.room_pos_x)
                            ld	b,a
                ; b has left edge of elevator

                ; check that item is left to elevator
                            ld	a,d
                            sub	b
                            jr	c,item_update_skip ;item is left to elevator

                            ld	a,(ix+elevators.elevator.width)
                            add	b
                ; c has right edge of elevator
                            ld	c,a

                ; check that item is right to elevator
                            ld	a,d
                            sub	c
                            jr	nc,item_update_skip ;item is right to elevator

                ;
                ;
                ; now check item global Y from e
                ;
                ;

                            ld	a,(ix+elevators.elevator.y)
                            ld	c,a
                ; c has global y position of elevator                            
                ; check that item is on the elevator - item's global y should be elevator's global y - 1
                            dec	a

                            sub	e
                            jr	nz,item_update_skip ;item is not above elevator

                ; restore stack
                            pop	hl
                ; return true
                            ld	a,elevators.item_on_elevator
                            ret
item_update_skip
                            pop	hl
                            jr	item_update_next
                ; return false                    
                            ld	a,elevators.item_not_elevator
                            ret
                        endmodule